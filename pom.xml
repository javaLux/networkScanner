<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>myjfxprojects</groupId>
	<artifactId>networkScanner</artifactId>
	<version>1.0</version>
	<name>Simple-Network-Scanner</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<project.java.version>18</project.java.version>
		<maven.compiler.release>${project.java.version}</maven.compiler.release>
		<maven.compiler.source>${project.java.version}</maven.compiler.source>
		<maven.compiler.target>${project.java.version}</maven.compiler.target>
		<maven.compiler.encoding>${project.build.sourceEncoding}</maven.compiler.encoding>
		<maven.resources.encoding>${project.build.sourceEncoding}</maven.resources.encoding>
		<openJfxVersion>18.0.1</openJfxVersion>
		<fileVersionForExe>1.0.0.0</fileVersionForExe>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-controls</artifactId>
			<version>${openJfxVersion}</version>
		</dependency>
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-fxml</artifactId>
			<version>${openJfxVersion}</version>
		</dependency>
		<!-- Cross-platform dependencies for the windows platform -->
		<dependency>
			<groupId>org.openjfx</groupId>
			<artifactId>javafx-graphics</artifactId>
			<version>${openJfxVersion}</version>
			<classifier>win</classifier>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>2.17.2</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.36</version>
		</dependency>
	</dependencies>


	<build>
		<plugins>
			<plugin>
				<groupId>org.openjfx</groupId>
				<artifactId>javafx-maven-plugin</artifactId>
				<version>0.0.8</version>
				<configuration>
					<mainClass>execute.SuperMain</mainClass>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<!-- define the final directory for the required application resources -->
							<outputDirectory>${project.build.directory}/resources</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}/src/main/resources</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.3.0</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<!-- define the final directory for the required application dependencies -->
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>3.2.2</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<!-- Set class path for the JAR, to find classes for executing this application -->
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>execute.SuperMain</mainClass>
						</manifest>
						<manifestEntries>
							<!-- Set entry point of the class path, this is root directory -->
							<Class-Path>.</Class-Path>
						</manifestEntries>
					</archive>
					<finalName>${project.name}-${project.version}</finalName>
					<!-- <outputDirectory>${project.build.directory}/${project.artifactId}</outputDirectory> -->
				</configuration>
			</plugin>

			<!-- Plugin to handle the final deployment of this application -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.3.0</version>
				<executions>
					<execution>
						<!-- Bundle the .exe and the custom JDK into a final ZIP archive -->
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<finalName>${project.name}</finalName>
							<appendAssemblyId>false</appendAssemblyId>
							<descriptors>
								<!-- Handle executing of the plugin with the assembly file -->
								<descriptor>${project.basedir}/conf/assembly.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>